<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bpm.gd.wms.outbound.server.mapper.ext.OutBoundFillBillTaskExtMapper">
  <resultMap id="BaseResultMap" type="com.bpm.gd.wms.outbound.server.domain.OutBoundFillBillTask">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="FILL_BILL_ID" jdbcType="VARCHAR" property="fillBillId" />
    <result column="WORK_LINE" jdbcType="VARCHAR" property="workLine" />
    <result column="MATTER_NO" jdbcType="VARCHAR" property="matterNo" />
    <result column="MATTER_NUMBER" jdbcType="NUMERIC" property="matterNumber" />
    <result column="STATUS" jdbcType="VARCHAR" property="status" />
    <result column="TASK_LEADER_ID" jdbcType="VARCHAR" property="taskLeaderId" />
    <result column="TASK_STATUS" jdbcType="VARCHAR" property="taskStatus" />
    <result column="MATTER_SPEC" jdbcType="VARCHAR" property="matterSpec" />
    <result column="MATTER_NAME" jdbcType="VARCHAR" property="matterName" />
    <result column="BILL_DATE" jdbcType="TIMESTAMP" property="billDate" />
    <result column="DEPOT_ID" jdbcType="VARCHAR" property="depotId" />
    <result column="OUT_STATUS" jdbcType="VARCHAR" property="outStatus" />
    <result column="OUT_NUMBER" jdbcType="NUMERIC" property="outNumber" />
    <result column="ALL_NUMBER" jdbcType="NUMERIC" property="allNumber" />
    <result column="IN_USE_NUMBER" jdbcType="NUMERIC" property="inUseNumber" />
    <result column="OUT_USE_NUMBER" jdbcType="NUMERIC" property="outUseNumber" />
    <result column="ADD_USE_NUMBER" jdbcType="NUMERIC" property="addUseNumber" />
    <result column="ONE_AREA_NUMBER" jdbcType="NUMERIC" property="oneAreaNumber" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, FILL_BILL_ID, WORK_LINE, MATTER_NO, MATTER_NUMBER, STATUS, TASK_LEADER_ID, TASK_STATUS, 
    MATTER_SPEC, MATTER_NAME, BILL_DATE, DEPOT_ID, OUT_STATUS, OUT_NUMBER, ALL_NUMBER, 
    IN_USE_NUMBER, OUT_USE_NUMBER, ADD_USE_NUMBER, ONE_AREA_NUMBER
  </sql>
  <select id="selectByExample" parameterType="com.bpm.gd.wms.outbound.server.domain.OutBoundFillBillTaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from OUT_BOUND_FILL_BILL_TASK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from OUT_BOUND_FILL_BILL_TASK
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from OUT_BOUND_FILL_BILL_TASK
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.bpm.gd.wms.outbound.server.domain.OutBoundFillBillTaskExample">
    delete from OUT_BOUND_FILL_BILL_TASK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>


  <insert id="insertSelective" parameterType="com.bpm.gd.wms.outbound.server.domain.OutBoundFillBillTask">

    insert into OUT_BOUND_FILL_BILL_TASK (ID,FILL_BILL_ID, WORK_LINE, MATTER_NO,
    MATTER_NUMBER, STATUS, TASK_LEADER_ID,
    TASK_STATUS, MATTER_SPEC, MATTER_NAME,
    BILL_DATE, DEPOT_ID, OUT_STATUS,
    OUT_NUMBER, ALL_NUMBER, IN_USE_NUMBER,
    OUT_USE_NUMBER, ADD_USE_NUMBER, ONE_AREA_NUMBER
    )
    values (#{Id,jdbcType=VARCHAR},#{fillBillId,jdbcType=VARCHAR}, #{workLine,jdbcType=VARCHAR}, #{matterNo,jdbcType=VARCHAR},
    #{matterNumber,jdbcType=NUMERIC}, #{status,jdbcType=VARCHAR}, #{taskLeaderId,jdbcType=VARCHAR},
    #{taskStatus,jdbcType=VARCHAR}, #{matterSpec,jdbcType=VARCHAR}, #{matterName,jdbcType=VARCHAR},
    #{billDate,jdbcType=TIMESTAMP}, #{depotId,jdbcType=VARCHAR}, #{outStatus,jdbcType=VARCHAR},
    #{outNumber,jdbcType=NUMERIC}, #{allNumber,jdbcType=NUMERIC}, #{inUseNumber,jdbcType=NUMERIC},
    #{outUseNumber,jdbcType=NUMERIC}, #{addUseNumber,jdbcType=NUMERIC}, #{oneAreaNumber,jdbcType=NUMERIC}
    )
  </insert>
  <insert id="insert" parameterType="com.bpm.gd.wms.outbound.server.domain.OutBoundFillBillTask">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      Oracle
    </selectKey>
    insert into OUT_BOUND_FILL_BILL_TASK (FILL_BILL_ID, WORK_LINE, MATTER_NO, 
      MATTER_NUMBER, STATUS, TASK_LEADER_ID, 
      TASK_STATUS, MATTER_SPEC, MATTER_NAME, 
      BILL_DATE, DEPOT_ID, OUT_STATUS, 
      OUT_NUMBER, ALL_NUMBER, IN_USE_NUMBER, 
      OUT_USE_NUMBER, ADD_USE_NUMBER, ONE_AREA_NUMBER
      )
    values (#{fillBillId,jdbcType=VARCHAR}, #{workLine,jdbcType=VARCHAR}, #{matterNo,jdbcType=VARCHAR}, 
      #{matterNumber,jdbcType=NUMERIC}, #{status,jdbcType=VARCHAR}, #{taskLeaderId,jdbcType=VARCHAR}, 
      #{taskStatus,jdbcType=VARCHAR}, #{matterSpec,jdbcType=VARCHAR}, #{matterName,jdbcType=VARCHAR}, 
      #{billDate,jdbcType=TIMESTAMP}, #{depotId,jdbcType=VARCHAR}, #{outStatus,jdbcType=VARCHAR}, 
      #{outNumber,jdbcType=NUMERIC}, #{allNumber,jdbcType=NUMERIC}, #{inUseNumber,jdbcType=NUMERIC}, 
      #{outUseNumber,jdbcType=NUMERIC}, #{addUseNumber,jdbcType=NUMERIC}, #{oneAreaNumber,jdbcType=NUMERIC}
      )
  </insert>

  <select id="findPositionByWorkOrder" parameterType="java.lang.String" resultType="com.bpm.gd.wms.outbound.server.domain.OutBoundFillBillTask">
    select * from OUT_BOUND_FILL_BILL_TASK where 1=1
    <if test="workOrderId != null and workOrderId !=''">
      and WORK_ORDER_ID = #{workOrderId}
    </if>
  </select>


  <select id="findTaskByWorkOrder" parameterType="java.lang.String" resultType="com.bpm.gd.wms.outbound.server.domain.OutBoundFillBillTask">
    select * from OUT_BOUND_FILL_BILL_TASK where 1=1
    <if test="workOrderId != null and workOrderId !=''">
      and WORK_ORDER_ID = #{workOrderId}
    </if>
  </select>
  <select id="findTaskByBill" parameterType="java.lang.String" resultType="com.bpm.gd.wms.outbound.server.domain.OutBoundFillBillTask">
    select * from OUT_BOUND_FILL_BILL_TASK where 1=1
    <if test="fillBillId != null and fillBillId !=''">
      and FILL_BILL_ID = #{fillBillId}
    </if>
  </select>
  <select id="findTaskBySale" parameterType="java.lang.String" resultType="com.bpm.gd.wms.outbound.server.domain.OutBoundFillBillTask">
    select * from OUT_BOUND_FILL_BILL_TASK where 1=1
    <if test="saleId != null and saleId !=''">
      and SALE_ID = #{saleId}
    </if>
  </select>

  <select id="findTransferInfo" parameterType="java.lang.String" resultType="com.bpm.gd.wms.outbound.server.domain.OutBoundFillBillTask">
      select a.FILL_BILL_ID, a.WORK_LINE, a.MATTER_NO,
   a.MATTER_NUMBER, a.STATUS, c.TASK_LEADER_ID,
    a.TASK_STATUS,a.MATTER_SPEC,a.MATTER_NAME,
    a.BILL_DATE, a.DEPOT_ID, a.OUT_STATUS,
    a.OUT_NUMBER, a.ALL_NUMBER, a.IN_USE_NUMBER,a.SALE_ID,a.CREATE_DATE,a.OUT_TIME,a.TRANSFER_ID,a.TARGET_DEPOT,b.TRANSFER_DATE,
		a.OUT_USE_NUMBER, a.ADD_USE_NUMBER, a.ONE_AREA_NUMBER from OUT_BOUND_FILL_BILL_TASK a LEFT JOIN OUT_BOUND_SALE_TRANSFER b  on a.TRANSFER_ID=b.TRANSFER_ID  left join OUT_BOUND_SALE c on c.sale_id=a.sale_id
     where 1=1 and a.transfer_id = #{id}
  </select>
  <select id="findTransferInfoCount" parameterType="java.lang.String" resultType="com.bpm.gd.wms.outbound.server.domain.OutBoundFillBillTask">
select MATTER_NO,sum(OUT_NUMBER) OUT_NUMBER  from (
     select FILL_BILL_ID, WORK_LINE, MATTER_NO,
   MATTER_NUMBER, STATUS, TASK_LEADER_ID,
    TASK_STATUS,MATTER_SPEC,MATTER_NAME,
    BILL_DATE, DEPOT_ID, OUT_STATUS,
    OUT_NUMBER, ALL_NUMBER, IN_USE_NUMBER,a.SALE_ID,CREATE_DATE,OUT_TIME,a.TRANSFER_ID,TARGET_DEPOT,TRANSFER_DATE,
		OUT_USE_NUMBER, ADD_USE_NUMBER, ONE_AREA_NUMBER from OUT_BOUND_FILL_BILL_TASK a LEFT JOIN OUT_BOUND_SALE_TRANSFER b  on a.TRANSFER_ID=b.TRANSFER_ID
     where 1=1 and a.transfer_id = #{id}
     ) aaa
     group by MATTER_NO
  </select>


  <select id="findTransferId" parameterType="com.bpm.gd.wms.outbound.server.domain.OutBoundFillBillTask" resultType="com.bpm.gd.wms.outbound.server.domain.OutBoundFillBillTask">
    select  FILL_BILL_ID, WORK_LINE, b.MATTER_NO,
    b.MATTER_NUMBER, STATUS, TASK_LEADER_ID,
    TASK_STATUS, b.MATTER_SPEC, b.MATTER_NAME,
    BILL_DATE, DEPOT_ID, OUT_STATUS,
    OUT_NUMBER, ALL_NUMBER, IN_USE_NUMBER,a.SALE_ID,CREATE_DATE,OUT_TIME,TRANSFER_ID,TARGET_DEPOT,
    OUT_USE_NUMBER, ADD_USE_NUMBER, ONE_AREA_NUMBER  from OUT_BOUND_FILL_BILL_TASK a left join OUT_BOUND_SALE_DETAILS b on a.SALE_ID=b.SALE_ID
    where 1=1 and SALE_ID = #{saleId}
  </select>
  <select id="findMatterNumberId" parameterType="com.bpm.gd.wms.outbound.server.domain.OutBoundFillBillTask" resultType="com.bpm.gd.wms.outbound.server.domain.OutBoundFillBillTask">
    select  MATTER_NUMBER,MATTER_NO,SALE_ID  from OUT_BOUND_SALE_DETAILS
    where 1=1 and SALE_ID = #{saleId}
  </select>

  <select id="findTransferOrder" parameterType="com.bpm.gd.wms.outbound.server.dto.QueryBillDTO" resultType="com.bpm.gd.wms.outbound.server.domain.OutBoundFillBillTask">
    select a.ID,b.FILL_BILL_ID, b.WORK_LINE, b.MATTER_NO,
    b.MATTER_NUMBER, b.STATUS, c.TASK_LEADER_ID,
    b.TASK_STATUS, b.MATTER_SPEC, b.MATTER_NAME,
    b.BILL_DATE, b.DEPOT_ID, b.OUT_STATUS,
    b.OUT_NUMBER, b.ALL_NUMBER, b.IN_USE_NUMBER,
    b.OUT_USE_NUMBER, b.ADD_USE_NUMBER, b.ONE_AREA_NUMBER,a.sale_id,b.OUT_TIME,a.transfer_id,a.transfer_date,a.TRANSFER_STATUS
    from OUT_BOUND_SALE_TRANSFER a left join  OUT_BOUND_FILL_BILL_TASK b  on  a.TRANSFER_ID=b.TRANSFER_ID left join OUT_BOUND_SALE c on c.sale_id=a.sale_id where 1=1
    <if test="billId != null and billId !=''">
      and a.TRANSFER_ID = #{billId}
    </if>


    <if test="startDate != null">
      and a.transfer_date >= to_date(to_char(#{startDate}, 'yyyy-MM-dd HH:mm:ss'),'yyyy-mm-dd hh24:mi:ss')
    </if>

    <if test="endDate != null">
      and a.transfer_date &lt;= to_date(to_char(#{endDate}, 'yyyy-MM-dd HH:mm:ss'),'yyyy-mm-dd hh24:mi:ss')
    </if>

    <if test="dispachType == '调拨中'">
      and a.TRANSFER_STATUS !=1
    </if>
    <if test="dispachType == '已调拨'">
      and a.TRANSFER_STATUS =1
    </if>
    order by b.OUT_TIME
  </select>

<!--  <select id="findTransferInfo" parameterType="com.bpm.gd.wms.outbound.server.dto.QueryBillDTO" resultType="com.bpm.gd.wms.outbound.server.domain.OutBoundFillBillTask">-->
<!--    select a.ID,FILL_BILL_ID, WORK_LINE, MATTER_NO,-->
<!--    MATTER_NUMBER, STATUS, TASK_LEADER_ID,-->
<!--    TASK_STATUS, MATTER_SPEC, MATTER_NAME,-->
<!--    BILL_DATE, DEPOT_ID, OUT_STATUS,-->
<!--    OUT_NUMBER, ALL_NUMBER, IN_USE_NUMBER,-->
<!--    OUT_USE_NUMBER, ADD_USE_NUMBER, ONE_AREA_NUMBER,a.sale_id,b.OUT_TIME,b.create_date,a.transfer_id,a.transfer_date-->
<!--    from OUT_BOUND_SALE_TRANSFER a right join  OUT_BOUND_FILL_BILL_TASK b  on  a.TRANSFER_ID=b.TRANSFER_ID where 1=1 and  a.SALE_ID is not null order by b.OUT_TIME-->
<!--    <if test="billId != null and billId !=''">-->
<!--      and SALE_ID = #{saleId}-->
<!--    </if>-->

<!--    <if test="startDate != null and startDate != ''">-->
<!--      and OUT_TIME>=to_date(#{startDate},'yyyy-mm-dd')-->
<!--    </if>-->
<!--    <if test="endDate != null and endDate != ''">-->
<!--      and OUT_TIME &lt;= to_date(#{endDate},'yyyy-mm-dd')-->
<!--    </if>-->

<!--    <if test="dispachType == '已派发'">-->
<!--      and TASK_STATUS ='已分配'-->
<!--    </if>-->
<!--    <if test="dispachType == '未派发'">-->
<!--      and TASK_STATUS !='已分配'-->
<!--    </if>-->

<!--  </select>-->

  <select id="InBoundMatterPosition" parameterType="java.util.List" resultType="com.bpm.gd.wms.outbound.server.domain.SendOrder">
    select h.counts ONE_AREA_NUMBER,g.DEPOT_ID,g.ALL_NUMBER,g.IN_USE_NUMBER,g.OUT_USE_NUMBER,g.WORK_ORDER_ID, g.WORK_LINE, g.MATTER_NO,g.MATTER_NUMBER, g.STATUS, g.TASK_LEADER_ID,g.TASK_STATUS, g.MATTER_SPEC, g.MATTER_NAME,g.WORK_ORDER_DATE from (
 select DEPOT_ID, ALL_NUMBER,
      IN_USE_NUMBER, OUT_USE_NUMBER,a.WORK_ORDER_ID, a.WORK_LINE, a.MATTER_NO,
      a.MATTER_NUMBER, a.STATUS, a.TASK_LEADER_ID,
      a.TASK_STATUS, a.MATTER_SPEC, a.MATTER_NAME,
      a.WORK_ORDER_DATE from OUT_BOUND_WORK_ORDER a

left join
(SELECT ID,DEPOT_ID, MATTER_ID, ALL_NUMBER,
      IN_USE_NUMBER, OUT_USE_NUMBER FROM BASE_DEPOT_TO_MATTER
where   OUT_USE_NUMBER>0 order by OUT_USE_NUMBER desc) b
 on a.MATTER_NO=b.MATTER_ID

where TASK_LEADER_ID=#{user} and TASK_STATUS not in ('已完成') and WORK_ORDER_ID=#{workOrderId}) g left join
(select i.STORAGE_LOCATION_COD,j.counts from(
select x.ID,y.STORAGE_LOCATION_COD PARENT_CODE,y.PARENT_ID GRAND_ID,x.STORAGE_LOCATION_COD,x.PARENT_ID  from BASE_DEPOT_MANAGEMENT x
left join
(select ID,STORAGE_LOCATION_COD,PARENT_ID  from BASE_DEPOT_MANAGEMENT ) y on x.PARENT_ID=y.ID ) i left join
(select count(STORAGE_LOCATION_COD) counts,PARENT_ID from BASE_DEPOT_MANAGEMENT group by PARENT_ID) j  on j.PARENT_ID=i.GRAND_ID) h on g.DEPOT_ID=h.STORAGE_LOCATION_COD
  </select>

<select id="findPositionByBill" parameterType="java.lang.String" resultType="com.bpm.gd.wms.outbound.server.domain.OutBoundFillBillTask">
    select * from OUT_BOUND_FILL_BILL_TASK where 1=1
  <if test="fillBillId != null and fillBillId !=''">
    and FILL_BILL_ID = #{fillBillId}
  </if>
</select>
  <update id="outBoundMatterWO" parameterType="java.util.List">
    update OUT_BOUND_FILL_BILL_TASK
    SET OUT_STATUS='已拣货',
      OUT_NUMBER = (CASE
      <foreach collection="list" index="index" item="item" open=" " separator=" " close=" ">
        WHEN DEPOT_ID=#{item.depotId} and MATTER_NO=#{item.matterNo} and WORK_ORDER_ID=#{item.workOrderId}
         THEN #{item.outNumber}
      </foreach>
      END)
    where DEPOT_ID in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item.depotId}
    </foreach>
    and MATTER_NO in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item.matterNo}
    </foreach>
    and WORK_ORDER_ID in
      <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
        #{item.workOrderId}
      </foreach>

  </update>


  <insert id="outBoundMatterWOnew" parameterType="com.bpm.gd.wms.outbound.server.domain.OutBoundFillBillTask">
    insert into OUT_BOUND_FILL_BILL_TASK (WORK_ORDER_ID,DEPOT_ID,MATTER_NO,OUT_NUMBER,ADD_USE_NUMBER) values (
    #{workOrderId,jdbcType=VARCHAR},  #{depotId,jdbcType=VARCHAR}, #{matterNo,jdbcType=VARCHAR},
    #{outNumber,jdbcType=NUMERIC}, #{addUseNumber,jdbcType=NUMERIC})
  </insert>

  <insert id="insertTransferInfo" parameterType="com.bpm.gd.wms.outbound.server.domain.OutBoundFillBillTask">
    insert into OUT_BOUND_SALE_TRANSFER (SALE_ID,TRANSFER_ID,TRANSFER_DATE) values (
    #{saleId,jdbcType=VARCHAR},  #{transferId,jdbcType=VARCHAR}, #{transferDate,jdbcType=DATE})
  </insert>

  <update id="updateTransferStatus" parameterType="com.bpm.gd.wms.outbound.server.domain.OutBoundFillBillTask">
    update OUT_BOUND_SALE_TRANSFER set TRANSFER_STATUS=1 where sale_id=#{saleId} and transfer_id=#{transferId}
  </update>

  <insert id="outBoundMatterSL" parameterType="com.bpm.gd.wms.outbound.server.domain.OutBoundFillBillTask">
    insert into OUT_BOUND_FILL_BILL_TASK (SALE_ID,DEPOT_ID,MATTER_NO,OUT_NUMBER,ADD_USE_NUMBER,TRANSFER_ID,TARGET_DEPOT) values (
    #{saleId,jdbcType=VARCHAR},  #{depotId,jdbcType=VARCHAR}, #{matterNo,jdbcType=VARCHAR},
    #{outNumber,jdbcType=NUMERIC}, #{addUseNumber,jdbcType=NUMERIC}, #{transferId,jdbcType=VARCHAR},#{targetDepot,jdbcType=VARCHAR})
  </insert>
  <insert id="outBoundMatterFB" parameterType="com.bpm.gd.wms.outbound.server.domain.OutBoundFillBillTask">
    insert into OUT_BOUND_FILL_BILL_TASK (FILL_BILL_ID,DEPOT_ID,MATTER_NO,OUT_NUMBER,ADD_USE_NUMBER) values (
    #{fillBillId,jdbcType=VARCHAR},  #{depotId,jdbcType=VARCHAR}, #{matterNo,jdbcType=VARCHAR},
    #{outNumber,jdbcType=NUMERIC}, #{addUseNumber,jdbcType=NUMERIC})
  </insert>
  <insert id="savePosition" parameterType="java.util.List">
    insert all
    <foreach collection="list" item="item" separator=" " close=" ">
     into OUT_BOUND_FILL_BILL_TASK
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="item.fillBillId != null">
        FILL_BILL_ID,
      </if>
      <if test="item.workLine != null">
        WORK_LINE,
      </if>
      <if test="item.matterNo != null">
        MATTER_NO,
      </if>
      <if test="item.matterNumber != null">
        MATTER_NUMBER,
      </if>
      <if test="item.status != null">
        STATUS,
      </if>
      <if test="item.taskLeaderId != null">
        TASK_LEADER_ID,
      </if>
      <if test="item.taskStatus != null">
        TASK_STATUS,
      </if>
      <if test="item.matterSpec != null">
        MATTER_SPEC,
      </if>
      <if test="item.matterName != null">
        MATTER_NAME,
      </if>
      <if test="item.billDate != null">
        BILL_DATE,
      </if>
      <if test="item.depotId != null">
        DEPOT_ID,
      </if>
      <if test="item.outStatus != null">
        OUT_STATUS,
      </if>
      <if test="item.outNumber != null">
        OUT_NUMBER,
      </if>
      <if test="item.allNumber != null">
        ALL_NUMBER,
      </if>
      <if test="item.inUseNumber != null">
        IN_USE_NUMBER,
      </if>
      <if test="item.outUseNumber != null">
        OUT_USE_NUMBER,
      </if>
      <if test="item.addUseNumber != null">
        ADD_USE_NUMBER,
      </if>
      <if test="item.oneAreaNumber != null">
        ONE_AREA_NUMBER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="item.fillBillId != null">
        #{item.fillBillId,jdbcType=VARCHAR},
      </if>
      <if test="item.workLine != null">
        #{item.workLine,jdbcType=VARCHAR},
      </if>
      <if test="item.matterNo != null">
        #{item.matterNo,jdbcType=VARCHAR},
      </if>
      <if test="item.matterNumber != null">
        #{item.matterNumber,jdbcType=NUMERIC},
      </if>
      <if test="item.status != null">
        #{item.status,jdbcType=VARCHAR},
      </if>
      <if test="item.taskLeaderId != null">
        #{item.taskLeaderId,jdbcType=VARCHAR},
      </if>
      <if test="item.taskStatus != null">
        #{item.taskStatus,jdbcType=VARCHAR},
      </if>
      <if test="item.matterSpec != null">
        #{item.matterSpec,jdbcType=VARCHAR},
      </if>
      <if test="item.matterName != null">
        #{item.matterName,jdbcType=VARCHAR},
      </if>
      <if test="item.billDate != null">
        #{item.billDate,jdbcType=TIMESTAMP},
      </if>
      <if test="item.depotId != null">
        #{item.depotId,jdbcType=VARCHAR},
      </if>
      <if test="item.outStatus != null">
        #{item.outStatus,jdbcType=VARCHAR},
      </if>
      <if test="item.outNumber != null">
        #{item.outNumber,jdbcType=NUMERIC},
      </if>
      <if test="item.allNumber != null">
        #{item.allNumber,jdbcType=NUMERIC},
      </if>
      <if test="item.inUseNumber != null">
        #{item.inUseNumber,jdbcType=NUMERIC},
      </if>
      <if test="item.outUseNumber != null">
        #{item.outUseNumber,jdbcType=NUMERIC},
      </if>
      <if test="item.addUseNumber != null">
        #{item.addUseNumber,jdbcType=NUMERIC},
      </if>
      <if test="item.oneAreaNumber != null">
        #{item.oneAreaNumber,jdbcType=NUMERIC},
      </if>
    </trim>
    </foreach>
    select 1 from dual
  </insert>

  <insert id="savePositionWO" parameterType="java.util.List">
    insert all
    <foreach collection="list" item="item" separator=" " close=" ">
      into OUT_BOUND_FILL_BILL_TASK
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.workOrderId != null">
          WORK_ORDER_ID,
        </if>
        <if test="item.workLine != null">
          WORK_LINE,
        </if>
        <if test="item.matterNo != null">
          MATTER_NO,
        </if>
        <if test="item.matterNumber != null">
          MATTER_NUMBER,
        </if>
        <if test="item.status != null">
          STATUS,
        </if>
        <if test="item.taskLeaderId != null">
          TASK_LEADER_ID,
        </if>
        <if test="item.taskStatus != null">
          TASK_STATUS,
        </if>
        <if test="item.matterSpec != null">
          MATTER_SPEC,
        </if>
        <if test="item.matterName != null">
          MATTER_NAME,
        </if>
        <if test="item.workOrderDate != null">
          WORK_ORDER_DATE,
        </if>
        <if test="item.depotId != null">
          DEPOT_ID,
        </if>
        <if test="item.outStatus != null">
          OUT_STATUS,
        </if>
        <if test="item.outNumber != null">
          OUT_NUMBER,
        </if>
        <if test="item.allNumber != null">
          ALL_NUMBER,
        </if>
        <if test="item.inUseNumber != null">
          IN_USE_NUMBER,
        </if>
        <if test="item.outUseNumber != null">
          OUT_USE_NUMBER,
        </if>
        <if test="item.addUseNumber != null">
          ADD_USE_NUMBER,
        </if>
        <if test="item.oneAreaNumber != null">
          ONE_AREA_NUMBER,
        </if>
      </trim>
      <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="item.workOrderId != null">
          #{item.workOrderId,jdbcType=VARCHAR},
        </if>
        <if test="item.workLine != null">
          #{item.workLine,jdbcType=VARCHAR},
        </if>
        <if test="item.matterNo != null">
          #{item.matterNo,jdbcType=VARCHAR},
        </if>
        <if test="item.matterNumber != null">
          #{item.matterNumber,jdbcType=NUMERIC},
        </if>
        <if test="item.status != null">
          #{item.status,jdbcType=VARCHAR},
        </if>
        <if test="item.taskLeaderId != null">
          #{item.taskLeaderId,jdbcType=VARCHAR},
        </if>
        <if test="item.taskStatus != null">
          #{item.taskStatus,jdbcType=VARCHAR},
        </if>
        <if test="item.matterSpec != null">
          #{item.matterSpec,jdbcType=VARCHAR},
        </if>
        <if test="item.matterName != null">
          #{item.matterName,jdbcType=VARCHAR},
        </if>
        <if test="item.workOrderDate != null">
          #{item.workOrderDate,jdbcType=TIMESTAMP},
        </if>
        <if test="item.depotId != null">
          #{item.depotId,jdbcType=VARCHAR},
        </if>
        <if test="item.outStatus != null">
          #{item.outStatus,jdbcType=VARCHAR},
        </if>
        <if test="item.outNumber != null">
          #{item.outNumber,jdbcType=NUMERIC},
        </if>
        <if test="item.allNumber != null">
          #{item.allNumber,jdbcType=NUMERIC},
        </if>
        <if test="item.inUseNumber != null">
          #{item.inUseNumber,jdbcType=NUMERIC},
        </if>
        <if test="item.outUseNumber != null">
          #{item.outUseNumber,jdbcType=NUMERIC},
        </if>
        <if test="item.addUseNumber != null">
          #{item.addUseNumber,jdbcType=NUMERIC},
        </if>
        <if test="item.oneAreaNumber != null">
          #{item.oneAreaNumber,jdbcType=NUMERIC},
        </if>
      </trim>
    </foreach>
    select 1 from dual
  </insert>
  <select id="countByExample" parameterType="com.bpm.gd.wms.outbound.server.domain.OutBoundFillBillTaskExample" resultType="java.lang.Long">
    select count(*) from OUT_BOUND_FILL_BILL_TASK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update OUT_BOUND_FILL_BILL_TASK
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.fillBillId != null">
        FILL_BILL_ID = #{record.fillBillId,jdbcType=VARCHAR},
      </if>
      <if test="record.workLine != null">
        WORK_LINE = #{record.workLine,jdbcType=VARCHAR},
      </if>
      <if test="record.matterNo != null">
        MATTER_NO = #{record.matterNo,jdbcType=VARCHAR},
      </if>
      <if test="record.matterNumber != null">
        MATTER_NUMBER = #{record.matterNumber,jdbcType=NUMERIC},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.taskLeaderId != null">
        TASK_LEADER_ID = #{record.taskLeaderId,jdbcType=VARCHAR},
      </if>
      <if test="record.taskStatus != null">
        TASK_STATUS = #{record.taskStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.matterSpec != null">
        MATTER_SPEC = #{record.matterSpec,jdbcType=VARCHAR},
      </if>
      <if test="record.matterName != null">
        MATTER_NAME = #{record.matterName,jdbcType=VARCHAR},
      </if>
      <if test="record.billDate != null">
        BILL_DATE = #{record.billDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.depotId != null">
        DEPOT_ID = #{record.depotId,jdbcType=VARCHAR},
      </if>
      <if test="record.outStatus != null">
        OUT_STATUS = #{record.outStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.outNumber != null">
        OUT_NUMBER = #{record.outNumber,jdbcType=NUMERIC},
      </if>
      <if test="record.allNumber != null">
        ALL_NUMBER = #{record.allNumber,jdbcType=NUMERIC},
      </if>
      <if test="record.inUseNumber != null">
        IN_USE_NUMBER = #{record.inUseNumber,jdbcType=NUMERIC},
      </if>
      <if test="record.outUseNumber != null">
        OUT_USE_NUMBER = #{record.outUseNumber,jdbcType=NUMERIC},
      </if>
      <if test="record.addUseNumber != null">
        ADD_USE_NUMBER = #{record.addUseNumber,jdbcType=NUMERIC},
      </if>
      <if test="record.oneAreaNumber != null">
        ONE_AREA_NUMBER = #{record.oneAreaNumber,jdbcType=NUMERIC},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update OUT_BOUND_FILL_BILL_TASK
    set ID = #{record.id,jdbcType=VARCHAR},
      FILL_BILL_ID = #{record.fillBillId,jdbcType=VARCHAR},
      WORK_LINE = #{record.workLine,jdbcType=VARCHAR},
      MATTER_NO = #{record.matterNo,jdbcType=VARCHAR},
      MATTER_NUMBER = #{record.matterNumber,jdbcType=NUMERIC},
      STATUS = #{record.status,jdbcType=VARCHAR},
      TASK_LEADER_ID = #{record.taskLeaderId,jdbcType=VARCHAR},
      TASK_STATUS = #{record.taskStatus,jdbcType=VARCHAR},
      MATTER_SPEC = #{record.matterSpec,jdbcType=VARCHAR},
      MATTER_NAME = #{record.matterName,jdbcType=VARCHAR},
      BILL_DATE = #{record.billDate,jdbcType=TIMESTAMP},
      DEPOT_ID = #{record.depotId,jdbcType=VARCHAR},
      OUT_STATUS = #{record.outStatus,jdbcType=VARCHAR},
      OUT_NUMBER = #{record.outNumber,jdbcType=NUMERIC},
      ALL_NUMBER = #{record.allNumber,jdbcType=NUMERIC},
      IN_USE_NUMBER = #{record.inUseNumber,jdbcType=NUMERIC},
      OUT_USE_NUMBER = #{record.outUseNumber,jdbcType=NUMERIC},
      ADD_USE_NUMBER = #{record.addUseNumber,jdbcType=NUMERIC},
      ONE_AREA_NUMBER = #{record.oneAreaNumber,jdbcType=NUMERIC}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bpm.gd.wms.outbound.server.domain.OutBoundFillBillTask">
    update OUT_BOUND_FILL_BILL_TASK
    <set>
      <if test="fillBillId != null">
        FILL_BILL_ID = #{fillBillId,jdbcType=VARCHAR},
      </if>
      <if test="workLine != null">
        WORK_LINE = #{workLine,jdbcType=VARCHAR},
      </if>
      <if test="matterNo != null">
        MATTER_NO = #{matterNo,jdbcType=VARCHAR},
      </if>
      <if test="matterNumber != null">
        MATTER_NUMBER = #{matterNumber,jdbcType=NUMERIC},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="taskLeaderId != null">
        TASK_LEADER_ID = #{taskLeaderId,jdbcType=VARCHAR},
      </if>
      <if test="taskStatus != null">
        TASK_STATUS = #{taskStatus,jdbcType=VARCHAR},
      </if>
      <if test="matterSpec != null">
        MATTER_SPEC = #{matterSpec,jdbcType=VARCHAR},
      </if>
      <if test="matterName != null">
        MATTER_NAME = #{matterName,jdbcType=VARCHAR},
      </if>
      <if test="billDate != null">
        BILL_DATE = #{billDate,jdbcType=TIMESTAMP},
      </if>
      <if test="depotId != null">
        DEPOT_ID = #{depotId,jdbcType=VARCHAR},
      </if>
      <if test="outStatus != null">
        OUT_STATUS = #{outStatus,jdbcType=VARCHAR},
      </if>
      <if test="outNumber != null">
        OUT_NUMBER = #{outNumber,jdbcType=NUMERIC},
      </if>
      <if test="allNumber != null">
        ALL_NUMBER = #{allNumber,jdbcType=NUMERIC},
      </if>
      <if test="inUseNumber != null">
        IN_USE_NUMBER = #{inUseNumber,jdbcType=NUMERIC},
      </if>
      <if test="outUseNumber != null">
        OUT_USE_NUMBER = #{outUseNumber,jdbcType=NUMERIC},
      </if>
      <if test="addUseNumber != null">
        ADD_USE_NUMBER = #{addUseNumber,jdbcType=NUMERIC},
      </if>
      <if test="oneAreaNumber != null">
        ONE_AREA_NUMBER = #{oneAreaNumber,jdbcType=NUMERIC},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bpm.gd.wms.outbound.server.domain.OutBoundFillBillTask">
    update OUT_BOUND_FILL_BILL_TASK
    set FILL_BILL_ID = #{fillBillId,jdbcType=VARCHAR},
      WORK_LINE = #{workLine,jdbcType=VARCHAR},
      MATTER_NO = #{matterNo,jdbcType=VARCHAR},
      MATTER_NUMBER = #{matterNumber,jdbcType=NUMERIC},
      STATUS = #{status,jdbcType=VARCHAR},
      TASK_LEADER_ID = #{taskLeaderId,jdbcType=VARCHAR},
      TASK_STATUS = #{taskStatus,jdbcType=VARCHAR},
      MATTER_SPEC = #{matterSpec,jdbcType=VARCHAR},
      MATTER_NAME = #{matterName,jdbcType=VARCHAR},
      BILL_DATE = #{billDate,jdbcType=TIMESTAMP},
      DEPOT_ID = #{depotId,jdbcType=VARCHAR},
      OUT_STATUS = #{outStatus,jdbcType=VARCHAR},
      OUT_NUMBER = #{outNumber,jdbcType=NUMERIC},
      ALL_NUMBER = #{allNumber,jdbcType=NUMERIC},
      IN_USE_NUMBER = #{inUseNumber,jdbcType=NUMERIC},
      OUT_USE_NUMBER = #{outUseNumber,jdbcType=NUMERIC},
      ADD_USE_NUMBER = #{addUseNumber,jdbcType=NUMERIC},
      ONE_AREA_NUMBER = #{oneAreaNumber,jdbcType=NUMERIC}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>