<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bpm.gd.wms.outbound.server.mapper.ext.OutBoundSaleExtMapper">
  <resultMap id="BaseResultMap" type="com.bpm.gd.wms.outbound.server.domain.OutBoundSale">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="SALE_ID" jdbcType="VARCHAR" property="saleId" />
    <result column="WORK_LINE" jdbcType="VARCHAR" property="workLine" />
    <result column="STATUS" jdbcType="VARCHAR" property="status" />
    <result column="TASK_LEADER_ID" jdbcType="VARCHAR" property="taskLeaderId" />
    <result column="TASK_STATUS" jdbcType="VARCHAR" property="taskStatus" />
    <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, SALE_ID, WORK_LINE, STATUS, TASK_LEADER_ID, TASK_STATUS, CREATE_DATE
  </sql>
  <select id="selectByExample" parameterType="com.bpm.gd.wms.outbound.server.domain.OutBoundSaleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from OUT_BOUND_SALE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from OUT_BOUND_SALE
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from OUT_BOUND_SALE
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.bpm.gd.wms.outbound.server.domain.OutBoundSaleExample">
    delete from OUT_BOUND_SALE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bpm.gd.wms.outbound.server.domain.OutBoundSale">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      Oracle
    </selectKey>
    insert into OUT_BOUND_SALE (SALE_ID, WORK_LINE, STATUS, 
      TASK_LEADER_ID, TASK_STATUS, CREATE_DATE
      )
    values (#{saleId,jdbcType=VARCHAR}, #{workLine,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{taskLeaderId,jdbcType=VARCHAR}, #{taskStatus,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bpm.gd.wms.outbound.server.domain.OutBoundSale">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      Oracle
    </selectKey>
    insert into OUT_BOUND_SALE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="saleId != null">
        SALE_ID,
      </if>
      <if test="workLine != null">
        WORK_LINE,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="taskLeaderId != null">
        TASK_LEADER_ID,
      </if>
      <if test="taskStatus != null">
        TASK_STATUS,
      </if>
      <if test="createDate != null">
        CREATE_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="saleId != null">
        #{saleId,jdbcType=VARCHAR},
      </if>
      <if test="workLine != null">
        #{workLine,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="taskLeaderId != null">
        #{taskLeaderId,jdbcType=VARCHAR},
      </if>
      <if test="taskStatus != null">
        #{taskStatus,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bpm.gd.wms.outbound.server.domain.OutBoundSaleExample" resultType="java.lang.Long">
    select count(*) from OUT_BOUND_SALE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update OUT_BOUND_SALE
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.saleId != null">
        SALE_ID = #{record.saleId,jdbcType=VARCHAR},
      </if>
      <if test="record.workLine != null">
        WORK_LINE = #{record.workLine,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.taskLeaderId != null">
        TASK_LEADER_ID = #{record.taskLeaderId,jdbcType=VARCHAR},
      </if>
      <if test="record.taskStatus != null">
        TASK_STATUS = #{record.taskStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update OUT_BOUND_SALE
    set ID = #{record.id,jdbcType=VARCHAR},
      SALE_ID = #{record.saleId,jdbcType=VARCHAR},
      WORK_LINE = #{record.workLine,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=VARCHAR},
      TASK_LEADER_ID = #{record.taskLeaderId,jdbcType=VARCHAR},
      TASK_STATUS = #{record.taskStatus,jdbcType=VARCHAR},
      CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bpm.gd.wms.outbound.server.domain.OutBoundSale">
    update OUT_BOUND_SALE
    <set>
      <if test="saleId != null">
        SALE_ID = #{saleId,jdbcType=VARCHAR},
      </if>
      <if test="workLine != null">
        WORK_LINE = #{workLine,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="taskLeaderId != null">
        TASK_LEADER_ID = #{taskLeaderId,jdbcType=VARCHAR},
      </if>
      <if test="taskStatus != null">
        TASK_STATUS = #{taskStatus,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bpm.gd.wms.outbound.server.domain.OutBoundSale">
    update OUT_BOUND_SALE
    set SALE_ID = #{saleId,jdbcType=VARCHAR},
      WORK_LINE = #{workLine,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=VARCHAR},
      TASK_LEADER_ID = #{taskLeaderId,jdbcType=VARCHAR},
      TASK_STATUS = #{taskStatus,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </update>


  <select id="findSaleMatter" parameterType="java.lang.String" resultType="com.bpm.gd.wms.outbound.server.domain.OutBoundSale">
    select * from OUT_BOUND_SALE_DETAILS where 1=1
    <if test="saleId != null and saleId != ''">
      and   sale_id=#{saleId}
    </if>
  </select>
  <select id="findSaleInfo" parameterType="com.bpm.gd.wms.outbound.server.dto.QueryBillDTO" resultType="com.bpm.gd.wms.outbound.server.domain.OutBoundSale">
    select SALE_ID, WORK_LINE, STATUS, TASK_LEADER_ID, TASK_STATUS, CREATE_DATE from OUT_BOUND_SALE
    where 1=1
    <if test="billId != null and billId != ''">
      and   sale_id=#{billId}
    </if>

      <if test="startDate != null">
          and CREATE_DATE >= to_date(to_char(#{startDate}, 'yyyy-MM-dd HH:mm:ss'),'yyyy-mm-dd hh24:mi:ss')
      </if>

      <if test="endDate != null">
          and CREATE_DATE &lt;= to_date(to_char(#{endDate}, 'yyyy-MM-dd HH:mm:ss'),'yyyy-mm-dd hh24:mi:ss')
      </if>

    <if test="dispachType == '已派发'">
      and TASK_STATUS ='已分配'
    </if>
    <if test="dispachType == '未派发'">
      and TASK_STATUS !='已分配'
    </if>
  </select>
  <update id="dispatchSale" parameterType="java.util.List">
      update OUT_BOUND_SALE
      set TASK_STATUS='已分配',
      TASK_LEADER_ID = (CASE
      <foreach collection="list" index="index" item="item" open=" " separator=" " close=" ">
          WHEN sale_id=#{item}
          THEN (
          select USER_ID  from OUT_BOUND_SALE a left join OUT_BOUND_TASK_ROLE b on a.WORK_LINE=b.WORK_LINE
          where a.sale_id=#{item}  and b.WORK_LINE=(select DISTINCT WORK_LINE from OUT_BOUND_SALE where sale_id=#{item} )
          )
      </foreach>
      END)
      where sale_id in
      <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
          #{item}
      </foreach>
  </update>

  <select id="findSaleTaskByUser" parameterType="java.lang.String" resultType="com.bpm.gd.wms.outbound.server.domain.OutBoundSale">
    select   SALE_ID, WORK_LINE,CREATE_DATE from OUT_BOUND_SALE
    where TASK_LEADER_ID=#{user} and TASK_STATUS not in ('已完成')
  </select>

  <select id="findPositionBySale" parameterType="java.lang.String" resultType="com.bpm.gd.wms.outbound.server.domain.OutBoundSaleVO">
SELECT
	h.counts ONE_AREA_NUMBER,
	h.GRADE,
	g.DEPOT_ID,
	g.REAL_NUMBER,
	g.IN_USE_NUMBER,
	g.FREE_NUMBER,
	g.PRINT_TIME,
	g.SALE_ID,
	g.WORK_LINE,
	g.MATTER_NO,
	g.MATTER_NUMBER,
	g.STATUS,
	g.TASK_LEADER_ID,
	g.TASK_STATUS,
	g.MATTER_SPEC,
	g.MATTER_NAME,
	g.CREATE_DATE
FROM
	(
	SELECT
		b.DEPOT_ID,
		b.REAL_NUMBER,
		b.IN_USE_NUMBER,
		b.FREE_NUMBER,
		b.PRINT_TIME,
		a.SALE_ID,
		a.WORK_LINE,
		ab.MATTER_NO,
		ab.MATTER_NUMBER,
		a.STATUS,
		a.TASK_LEADER_ID,
		a.TASK_STATUS,
		ab.MATTER_SPEC,
		ab.MATTER_NAME,
		a.CREATE_DATE
	FROM
		OUT_BOUND_SALE a
		left join OUT_BOUND_SALE_DETAILS	ab on a.SALE_ID=ab.SALE_ID
		LEFT JOIN (
		SELECT
			aa.REAL_NUMBER,
			aa.PRINT_TIME,
			aa.IN_USE_NUMBER,
			aa.FREE_NUMBER,
			aa.ID,
			aa.DEPOT_ID,
			aa.MATTER_ID,
			aa.CASE_NO
		FROM
			BASE_DEPOT_TO_CASE aa
		ORDER BY
			aa.print_time ASC
		) b ON ab.MATTER_NO = b.MATTER_ID
	WHERE
		a.TASK_LEADER_ID = #{name}
		AND a.TASK_STATUS NOT IN ( '已完成' )
		AND a.SALE_ID = #{saleId}
	) g
	LEFT JOIN (
	SELECT
		i.STORAGE_LOCATION_COD,
		j.counts,
		i.GRADE
	FROM
		(
		SELECT
			x.ID,
			y.STORAGE_LOCATION_COD PARENT_CODE,
			y.PARENT_ID GRAND_ID,
			x.STORAGE_LOCATION_COD,
			x.PARENT_ID,
			x.GRADE
		FROM
			BASE_DEPOT_MANAGEMENT x
			LEFT JOIN ( SELECT ID, STORAGE_LOCATION_COD, PARENT_ID FROM BASE_DEPOT_MANAGEMENT ) y ON x.PARENT_ID = y.ID
		) i
	LEFT JOIN ( SELECT count( STORAGE_LOCATION_COD ) counts, PARENT_ID FROM BASE_DEPOT_MANAGEMENT GROUP BY PARENT_ID ) j ON j.PARENT_ID = i.GRAND_ID
	) h ON g.DEPOT_ID = h.STORAGE_LOCATION_COD
  </select>
</mapper>