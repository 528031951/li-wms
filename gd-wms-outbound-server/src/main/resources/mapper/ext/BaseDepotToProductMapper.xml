<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bpm.gd.wms.outbound.server.mapper.ext.BaseDepotToProductExtMapper">
  <resultMap id="BaseResultMap" type="com.bpm.gd.wms.outbound.server.domain.BaseDepotToProduct">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="DEPOT_ID" jdbcType="VARCHAR" property="depotId" />
    <result column="MATTER_ID" jdbcType="VARCHAR" property="matterId" />
    <result column="ALL_NUMBER" jdbcType="NUMERIC" property="allNumber" />
    <result column="TRANSFER_NUMBER" jdbcType="NUMERIC" property="transferNumber" />
    <result column="SUPPLIER_CODE" jdbcType="VARCHAR" property="supplierCode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, DEPOT_ID, MATTER_ID, ALL_NUMBER, TRANSFER_NUMBER, SUPPLIER_CODE
  </sql>
  <select id="selectByExample" parameterType="com.bpm.gd.wms.outbound.server.domain.BaseDepotToProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from BASE_DEPOT_TO_PRODUCT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from BASE_DEPOT_TO_PRODUCT
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from BASE_DEPOT_TO_PRODUCT
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.bpm.gd.wms.outbound.server.domain.BaseDepotToProductExample">
    delete from BASE_DEPOT_TO_PRODUCT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bpm.gd.wms.outbound.server.domain.BaseDepotToProduct">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      Oracle
    </selectKey>
    insert into BASE_DEPOT_TO_PRODUCT (DEPOT_ID, MATTER_ID, ALL_NUMBER, 
      TRANSFER_NUMBER, SUPPLIER_CODE)
    values (#{depotId,jdbcType=VARCHAR}, #{matterId,jdbcType=VARCHAR}, #{allNumber,jdbcType=NUMERIC}, 
      #{transferNumber,jdbcType=NUMERIC}, #{supplierCode,jdbcType=VARCHAR})
  </insert>
  <select id="findProductMatter" parameterType="com.bpm.gd.wms.outbound.server.dto.QueryProductDTO" resultType="com.bpm.gd.wms.outbound.server.domain.BaseDepotToProduct">
    select sum(ALL_NUMBER-TRANSFER_NUMBER) ALL_NUMBER,MATTER_ID from BASE_DEPOT_TO_PRODUCT   where 1=1
    <if test="productId != null and productId != ''" >
        and MATTER_ID=#{productId}
    </if>
    group by MATTER_ID
  </select>
  <select id="findProductMatterById" parameterType="com.bpm.gd.wms.outbound.server.dto.QueryProductDTO" resultType="com.bpm.gd.wms.outbound.server.domain.BaseDepotToProduct">
    select sum(ALL_NUMBER-TRANSFER_NUMBER) ALL_NUMBER,MATTER_ID from BASE_DEPOT_TO_PRODUCT   where 1=1
    and MATTER_ID in
    <foreach collection="list" open="(" separator="," item="item" close=")" >
      #{item}
    </foreach>
    group by MATTER_ID
  </select>
  <select id="findProductMatterByIdAll" parameterType="com.bpm.gd.wms.outbound.server.dto.QueryProductDTO" resultType="com.bpm.gd.wms.outbound.server.domain.BaseDepotToProduct">
    select * from BASE_DEPOT_TO_PRODUCT   where 1=1 and (ALL_NUMBER-TRANSFER_NUMBER)>0
    and MATTER_ID in
    <foreach collection="list" open="(" separator="," item="item" close=")" >
      #{item}
    </foreach>
    order by IN_TIME
  </select>

  <update id="outProduct" parameterType="java.util.List" >
    UPDATE BASE_DEPOT_TO_PRODUCT SET TRANSFER_NUMBER = (CASE
    <foreach collection="list" index="index" item="item" open=" " separator=" " close=" ">
      WHEN DEPOT_ID=#{item.depotId} and MATTER_ID=#{item.matterId} THEN (#{item.transferNumber} + #{item.addOutNumber})
    </foreach>
    END)
    where DEPOT_ID in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item.depotId}
    </foreach>
    and MATTER_ID in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item.matterId}
    </foreach>
  </update>

  <insert id="insertSelective" parameterType="com.bpm.gd.wms.outbound.server.domain.BaseDepotToProduct">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      Oracle
    </selectKey>
    insert into BASE_DEPOT_TO_PRODUCT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="depotId != null">
        DEPOT_ID,
      </if>
      <if test="matterId != null">
        MATTER_ID,
      </if>
      <if test="allNumber != null">
        ALL_NUMBER,
      </if>
      <if test="transferNumber != null">
        TRANSFER_NUMBER,
      </if>
      <if test="supplierCode != null">
        SUPPLIER_CODE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="depotId != null">
        #{depotId,jdbcType=VARCHAR},
      </if>
      <if test="matterId != null">
        #{matterId,jdbcType=VARCHAR},
      </if>
      <if test="allNumber != null">
        #{allNumber,jdbcType=NUMERIC},
      </if>
      <if test="transferNumber != null">
        #{transferNumber,jdbcType=NUMERIC},
      </if>
      <if test="supplierCode != null">
        #{supplierCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bpm.gd.wms.outbound.server.domain.BaseDepotToProductExample" resultType="java.lang.Long">
    select count(*) from BASE_DEPOT_TO_PRODUCT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update BASE_DEPOT_TO_PRODUCT
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.depotId != null">
        DEPOT_ID = #{record.depotId,jdbcType=VARCHAR},
      </if>
      <if test="record.matterId != null">
        MATTER_ID = #{record.matterId,jdbcType=VARCHAR},
      </if>
      <if test="record.allNumber != null">
        ALL_NUMBER = #{record.allNumber,jdbcType=NUMERIC},
      </if>
      <if test="record.transferNumber != null">
        TRANSFER_NUMBER = #{record.transferNumber,jdbcType=NUMERIC},
      </if>
      <if test="record.supplierCode != null">
        SUPPLIER_CODE = #{record.supplierCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update BASE_DEPOT_TO_PRODUCT
    set ID = #{record.id,jdbcType=VARCHAR},
      DEPOT_ID = #{record.depotId,jdbcType=VARCHAR},
      MATTER_ID = #{record.matterId,jdbcType=VARCHAR},
      ALL_NUMBER = #{record.allNumber,jdbcType=NUMERIC},
      TRANSFER_NUMBER = #{record.transferNumber,jdbcType=NUMERIC},
      SUPPLIER_CODE = #{record.supplierCode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bpm.gd.wms.outbound.server.domain.BaseDepotToProduct">
    update BASE_DEPOT_TO_PRODUCT
    <set>
      <if test="depotId != null">
        DEPOT_ID = #{depotId,jdbcType=VARCHAR},
      </if>
      <if test="matterId != null">
        MATTER_ID = #{matterId,jdbcType=VARCHAR},
      </if>
      <if test="allNumber != null">
        ALL_NUMBER = #{allNumber,jdbcType=NUMERIC},
      </if>
      <if test="transferNumber != null">
        TRANSFER_NUMBER = #{transferNumber,jdbcType=NUMERIC},
      </if>
      <if test="supplierCode != null">
        SUPPLIER_CODE = #{supplierCode,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bpm.gd.wms.outbound.server.domain.BaseDepotToProduct">
    update BASE_DEPOT_TO_PRODUCT
    set DEPOT_ID = #{depotId,jdbcType=VARCHAR},
      MATTER_ID = #{matterId,jdbcType=VARCHAR},
      ALL_NUMBER = #{allNumber,jdbcType=NUMERIC},
      TRANSFER_NUMBER = #{transferNumber,jdbcType=NUMERIC},
      SUPPLIER_CODE = #{supplierCode,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>