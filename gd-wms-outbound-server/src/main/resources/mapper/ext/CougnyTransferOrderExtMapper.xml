<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bpm.gd.wms.outbound.server.mapper.ext.CougnyTransferOrderExtMapper">
  <resultMap id="BaseResultMap" type="com.bpm.gd.wms.outbound.server.domain.CougnyTransferOrder">
    <id column="ID" jdbcType="NUMERIC" property="id" />
    <result column="MATERIAL_CODE" jdbcType="VARCHAR" property="materialCode" />
    <result column="MATERIAL_NAME" jdbcType="VARCHAR" property="materialName" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="USER_ID" jdbcType="NUMERIC" property="userId" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="LOW_LOCATION_NAME" jdbcType="VARCHAR" property="lowLocationName" />
    <result column="LOW_LOCATION_COD" jdbcType="VARCHAR" property="lowLocationCod" />
    <result column="HIGH_LOCATION_COD" jdbcType="VARCHAR" property="highLocationCod" />
    <result column="HIGH_LOCATION_NAME" jdbcType="VARCHAR" property="highLocationName" />
    <result column="DB_NUMBER" jdbcType="NUMERIC" property="dbNumber" />
    <result column="TAKE_OUT_WAREHOUSE" jdbcType="VARCHAR" property="takeOutWarehouse" />
    <result column="PUT_IN_WAREHOUSE" jdbcType="VARCHAR" property="putInWarehouse" />
    <result column="PRODUCT_SPECIFICATIONS" jdbcType="VARCHAR" property="productSpecifications" />
    <result column="SHIPMENT_NO" jdbcType="VARCHAR" property="shipmentNo" />
    <result column="CUSTOMER_MATERIAL_NUMBER" jdbcType="VARCHAR" property="customerMaterialNumber" />
    <result column="CUSTOMER_NAME" jdbcType="VARCHAR" property="customerName" />
    <result column="SHIPMENT_REMARKS" jdbcType="VARCHAR" property="shipmentRemarks" />
    <result column="SHIPMENT_TYPE" jdbcType="VARCHAR" property="shipmentType" />
    <result column="CUSTOMER_ID" jdbcType="VARCHAR" property="customerId" />
    <result column="PRODUCT_UNIT" jdbcType="VARCHAR" property="productUnit" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, MATERIAL_CODE, MATERIAL_NAME, CREATE_TIME, USER_ID, USER_NAME, LOW_LOCATION_NAME,
    LOW_LOCATION_COD, HIGH_LOCATION_COD, HIGH_LOCATION_NAME, DB_NUMBER, TAKE_OUT_WAREHOUSE,
    PUT_IN_WAREHOUSE, PRODUCT_SPECIFICATIONS, SHIPMENT_NO, CUSTOMER_MATERIAL_NUMBER,
    CUSTOMER_NAME, SHIPMENT_REMARKS, SHIPMENT_TYPE, CUSTOMER_ID, PRODUCT_UNIT
  </sql>
  <select id="selectByExample" parameterType="com.bpm.gd.wms.outbound.server.domain.CougnyTransferOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from COUGNY_TRANSFER_ORDER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from COUGNY_TRANSFER_ORDER
    where ID = #{id,jdbcType=NUMERIC}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from COUGNY_TRANSFER_ORDER
    where ID = #{id,jdbcType=NUMERIC}
  </delete>
  <delete id="deleteByExample" parameterType="com.bpm.gd.wms.outbound.server.domain.CougnyTransferOrderExample">
    delete from COUGNY_TRANSFER_ORDER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bpm.gd.wms.outbound.server.domain.CougnyTransferOrder">
    insert into COUGNY_TRANSFER_ORDER (ID, MATERIAL_CODE, MATERIAL_NAME,
      CREATE_TIME, USER_ID, USER_NAME,
      LOW_LOCATION_NAME, LOW_LOCATION_COD, HIGH_LOCATION_COD,
      HIGH_LOCATION_NAME, DB_NUMBER, TAKE_OUT_WAREHOUSE,
      PUT_IN_WAREHOUSE, PRODUCT_SPECIFICATIONS,
      SHIPMENT_NO, CUSTOMER_MATERIAL_NUMBER, CUSTOMER_NAME,
      SHIPMENT_REMARKS, SHIPMENT_TYPE, CUSTOMER_ID,
      PRODUCT_UNIT)
    values (#{id,jdbcType=NUMERIC}, #{materialCode,jdbcType=VARCHAR}, #{materialName,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=NUMERIC}, #{userName,jdbcType=VARCHAR},
      #{lowLocationName,jdbcType=VARCHAR}, #{lowLocationCod,jdbcType=VARCHAR}, #{highLocationCod,jdbcType=VARCHAR},
      #{highLocationName,jdbcType=VARCHAR}, #{dbNumber,jdbcType=NUMERIC}, #{takeOutWarehouse,jdbcType=VARCHAR},
      #{putInWarehouse,jdbcType=VARCHAR}, #{productSpecifications,jdbcType=VARCHAR},
      #{shipmentNo,jdbcType=VARCHAR}, #{customerMaterialNumber,jdbcType=VARCHAR}, #{customerName,jdbcType=VARCHAR},
      #{shipmentRemarks,jdbcType=VARCHAR}, #{shipmentType,jdbcType=VARCHAR}, #{customerId,jdbcType=VARCHAR},
      #{productUnit,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bpm.gd.wms.outbound.server.domain.CougnyTransferOrder">
    insert into COUGNY_TRANSFER_ORDER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="materialCode != null">
        MATERIAL_CODE,
      </if>
      <if test="materialName != null">
        MATERIAL_NAME,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="lowLocationName != null">
        LOW_LOCATION_NAME,
      </if>
      <if test="lowLocationCod != null">
        LOW_LOCATION_COD,
      </if>
      <if test="highLocationCod != null">
        HIGH_LOCATION_COD,
      </if>
      <if test="highLocationName != null">
        HIGH_LOCATION_NAME,
      </if>
      <if test="dbNumber != null">
        DB_NUMBER,
      </if>
      <if test="takeOutWarehouse != null">
        TAKE_OUT_WAREHOUSE,
      </if>
      <if test="putInWarehouse != null">
        PUT_IN_WAREHOUSE,
      </if>
      <if test="productSpecifications != null">
        PRODUCT_SPECIFICATIONS,
      </if>
      <if test="shipmentNo != null">
        SHIPMENT_NO,
      </if>
      <if test="customerMaterialNumber != null">
        CUSTOMER_MATERIAL_NUMBER,
      </if>
      <if test="customerName != null">
        CUSTOMER_NAME,
      </if>
      <if test="shipmentRemarks != null">
        SHIPMENT_REMARKS,
      </if>
      <if test="shipmentType != null">
        SHIPMENT_TYPE,
      </if>
      <if test="customerId != null">
        CUSTOMER_ID,
      </if>
      <if test="productUnit != null">
        PRODUCT_UNIT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=NUMERIC},
      </if>
      <if test="materialCode != null">
        #{materialCode,jdbcType=VARCHAR},
      </if>
      <if test="materialName != null">
        #{materialName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=NUMERIC},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="lowLocationName != null">
        #{lowLocationName,jdbcType=VARCHAR},
      </if>
      <if test="lowLocationCod != null">
        #{lowLocationCod,jdbcType=VARCHAR},
      </if>
      <if test="highLocationCod != null">
        #{highLocationCod,jdbcType=VARCHAR},
      </if>
      <if test="highLocationName != null">
        #{highLocationName,jdbcType=VARCHAR},
      </if>
      <if test="dbNumber != null">
        #{dbNumber,jdbcType=NUMERIC},
      </if>
      <if test="takeOutWarehouse != null">
        #{takeOutWarehouse,jdbcType=VARCHAR},
      </if>
      <if test="putInWarehouse != null">
        #{putInWarehouse,jdbcType=VARCHAR},
      </if>
      <if test="productSpecifications != null">
        #{productSpecifications,jdbcType=VARCHAR},
      </if>
      <if test="shipmentNo != null">
        #{shipmentNo,jdbcType=VARCHAR},
      </if>
      <if test="customerMaterialNumber != null">
        #{customerMaterialNumber,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="shipmentRemarks != null">
        #{shipmentRemarks,jdbcType=VARCHAR},
      </if>
      <if test="shipmentType != null">
        #{shipmentType,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="productUnit != null">
        #{productUnit,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

    <select id="countByExample" parameterType="com.bpm.gd.wms.outbound.server.domain.CougnyTransferOrderExample" resultType="java.lang.Long">
    select count(*) from COUGNY_TRANSFER_ORDER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    update COUGNY_TRANSFER_ORDER
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=NUMERIC},
      </if>
      <if test="record.materialCode != null">
        MATERIAL_CODE = #{record.materialCode,jdbcType=VARCHAR},
      </if>
      <if test="record.materialName != null">
        MATERIAL_NAME = #{record.materialName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=NUMERIC},
      </if>
      <if test="record.userName != null">
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.lowLocationName != null">
        LOW_LOCATION_NAME = #{record.lowLocationName,jdbcType=VARCHAR},
      </if>
      <if test="record.lowLocationCod != null">
        LOW_LOCATION_COD = #{record.lowLocationCod,jdbcType=VARCHAR},
      </if>
      <if test="record.highLocationCod != null">
        HIGH_LOCATION_COD = #{record.highLocationCod,jdbcType=VARCHAR},
      </if>
      <if test="record.highLocationName != null">
        HIGH_LOCATION_NAME = #{record.highLocationName,jdbcType=VARCHAR},
      </if>
      <if test="record.dbNumber != null">
        DB_NUMBER = #{record.dbNumber,jdbcType=NUMERIC},
      </if>
      <if test="record.takeOutWarehouse != null">
        TAKE_OUT_WAREHOUSE = #{record.takeOutWarehouse,jdbcType=VARCHAR},
      </if>
      <if test="record.putInWarehouse != null">
        PUT_IN_WAREHOUSE = #{record.putInWarehouse,jdbcType=VARCHAR},
      </if>
      <if test="record.productSpecifications != null">
        PRODUCT_SPECIFICATIONS = #{record.productSpecifications,jdbcType=VARCHAR},
      </if>
      <if test="record.shipmentNo != null">
        SHIPMENT_NO = #{record.shipmentNo,jdbcType=VARCHAR},
      </if>
      <if test="record.customerMaterialNumber != null">
        CUSTOMER_MATERIAL_NUMBER = #{record.customerMaterialNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.customerName != null">
        CUSTOMER_NAME = #{record.customerName,jdbcType=VARCHAR},
      </if>
      <if test="record.shipmentRemarks != null">
        SHIPMENT_REMARKS = #{record.shipmentRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.shipmentType != null">
        SHIPMENT_TYPE = #{record.shipmentType,jdbcType=VARCHAR},
      </if>
      <if test="record.customerId != null">
        CUSTOMER_ID = #{record.customerId,jdbcType=VARCHAR},
      </if>
      <if test="record.productUnit != null">
        PRODUCT_UNIT = #{record.productUnit,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update COUGNY_TRANSFER_ORDER
    set ID = #{record.id,jdbcType=NUMERIC},
    MATERIAL_CODE = #{record.materialCode,jdbcType=VARCHAR},
    MATERIAL_NAME = #{record.materialName,jdbcType=VARCHAR},
    CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
    USER_ID = #{record.userId,jdbcType=NUMERIC},
    USER_NAME = #{record.userName,jdbcType=VARCHAR},
    LOW_LOCATION_NAME = #{record.lowLocationName,jdbcType=VARCHAR},
    LOW_LOCATION_COD = #{record.lowLocationCod,jdbcType=VARCHAR},
    HIGH_LOCATION_COD = #{record.highLocationCod,jdbcType=VARCHAR},
    HIGH_LOCATION_NAME = #{record.highLocationName,jdbcType=VARCHAR},
    DB_NUMBER = #{record.dbNumber,jdbcType=NUMERIC},
    TAKE_OUT_WAREHOUSE = #{record.takeOutWarehouse,jdbcType=VARCHAR},
    PUT_IN_WAREHOUSE = #{record.putInWarehouse,jdbcType=VARCHAR},
    PRODUCT_SPECIFICATIONS = #{record.productSpecifications,jdbcType=VARCHAR},
    SHIPMENT_NO = #{record.shipmentNo,jdbcType=VARCHAR},
    CUSTOMER_MATERIAL_NUMBER = #{record.customerMaterialNumber,jdbcType=VARCHAR},
    CUSTOMER_NAME = #{record.customerName,jdbcType=VARCHAR},
    SHIPMENT_REMARKS = #{record.shipmentRemarks,jdbcType=VARCHAR},
    SHIPMENT_TYPE = #{record.shipmentType,jdbcType=VARCHAR},
    CUSTOMER_ID = #{record.customerId,jdbcType=VARCHAR},
    PRODUCT_UNIT = #{record.productUnit,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bpm.gd.wms.outbound.server.domain.CougnyTransferOrder">
    update COUGNY_TRANSFER_ORDER
    <set>
      <if test="materialCode != null">
        MATERIAL_CODE = #{materialCode,jdbcType=VARCHAR},
      </if>
      <if test="materialName != null">
        MATERIAL_NAME = #{materialName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=NUMERIC},
      </if>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="lowLocationName != null">
        LOW_LOCATION_NAME = #{lowLocationName,jdbcType=VARCHAR},
      </if>
      <if test="lowLocationCod != null">
        LOW_LOCATION_COD = #{lowLocationCod,jdbcType=VARCHAR},
      </if>
      <if test="highLocationCod != null">
        HIGH_LOCATION_COD = #{highLocationCod,jdbcType=VARCHAR},
      </if>
      <if test="highLocationName != null">
        HIGH_LOCATION_NAME = #{highLocationName,jdbcType=VARCHAR},
      </if>
      <if test="dbNumber != null">
        DB_NUMBER = #{dbNumber,jdbcType=NUMERIC},
      </if>
      <if test="takeOutWarehouse != null">
        TAKE_OUT_WAREHOUSE = #{takeOutWarehouse,jdbcType=VARCHAR},
      </if>
      <if test="putInWarehouse != null">
        PUT_IN_WAREHOUSE = #{putInWarehouse,jdbcType=VARCHAR},
      </if>
      <if test="productSpecifications != null">
        PRODUCT_SPECIFICATIONS = #{productSpecifications,jdbcType=VARCHAR},
      </if>
      <if test="shipmentNo != null">
        SHIPMENT_NO = #{shipmentNo,jdbcType=VARCHAR},
      </if>
      <if test="customerMaterialNumber != null">
        CUSTOMER_MATERIAL_NUMBER = #{customerMaterialNumber,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        CUSTOMER_NAME = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="shipmentRemarks != null">
        SHIPMENT_REMARKS = #{shipmentRemarks,jdbcType=VARCHAR},
      </if>
      <if test="shipmentType != null">
        SHIPMENT_TYPE = #{shipmentType,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        CUSTOMER_ID = #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="productUnit != null">
        PRODUCT_UNIT = #{productUnit,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=NUMERIC}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bpm.gd.wms.outbound.server.domain.CougnyTransferOrder">
    update COUGNY_TRANSFER_ORDER
    set MATERIAL_CODE = #{materialCode,jdbcType=VARCHAR},
      MATERIAL_NAME = #{materialName,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      USER_ID = #{userId,jdbcType=NUMERIC},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      LOW_LOCATION_NAME = #{lowLocationName,jdbcType=VARCHAR},
      LOW_LOCATION_COD = #{lowLocationCod,jdbcType=VARCHAR},
      HIGH_LOCATION_COD = #{highLocationCod,jdbcType=VARCHAR},
      HIGH_LOCATION_NAME = #{highLocationName,jdbcType=VARCHAR},
      DB_NUMBER = #{dbNumber,jdbcType=NUMERIC},
      TAKE_OUT_WAREHOUSE = #{takeOutWarehouse,jdbcType=VARCHAR},
      PUT_IN_WAREHOUSE = #{putInWarehouse,jdbcType=VARCHAR},
      PRODUCT_SPECIFICATIONS = #{productSpecifications,jdbcType=VARCHAR},
      SHIPMENT_NO = #{shipmentNo,jdbcType=VARCHAR},
      CUSTOMER_MATERIAL_NUMBER = #{customerMaterialNumber,jdbcType=VARCHAR},
      CUSTOMER_NAME = #{customerName,jdbcType=VARCHAR},
      SHIPMENT_REMARKS = #{shipmentRemarks,jdbcType=VARCHAR},
      SHIPMENT_TYPE = #{shipmentType,jdbcType=VARCHAR},
      CUSTOMER_ID = #{customerId,jdbcType=VARCHAR},
      PRODUCT_UNIT = #{productUnit,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=NUMERIC}
  </update>

  <insert id="addTransferOrder" parameterType="com.bpm.gd.wms.outbound.server.dto.AddCougnyTransferOrderDTO">
    insert into COUGNY_TRANSFER_ORDER (MATERIAL_CODE,MATERIAL_NAME,CREATE_TIME,HIGH_LOCATION_COD,DB_NUMBER,
        TAKE_OUT_WAREHOUSE,PUT_IN_WAREHOUSE,PRODUCT_SPECIFICATIONS,SHIPMENT_NO,CUSTOMER_MATERIAL_NUMBER,CUSTOMER_NAME,
        SHIPMENT_REMARKS,SHIPMENT_TYPE,CUSTOMER_ID,PRODUCT_UNIT)
    values (#{productId},#{productName},#{establishDate},#{storageLocationCod},
        #{shipmentNumberLong},#{storageLocationName},#{putInWarehouse},#{productSpecifications},
        #{shipmentNo},#{customerMaterialNumber},#{customerName},#{shipmentRemarks},
        #{shipmentType},#{customerId},#{productUnit})
  </insert>

  <select id="findTransferOrder2" parameterType="com.bpm.gd.wms.outbound.server.dto.CougnyTransferOrderDTOS" resultType="com.bpm.gd.wms.outbound.server.dto.CougnyTransferOrderDTO">
    SELECT *
    FROM COUGNY_TRANSFER_ORDER
  </select>

</mapper>